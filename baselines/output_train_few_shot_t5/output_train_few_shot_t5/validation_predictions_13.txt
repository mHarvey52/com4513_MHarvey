< extra_id_0 > table 2 shows the throughput for processing the treelstm model on our recursive framework , fold ’ s folding technique , and tensorflow ’ s iterative approach , with the large movie review dataset . the recursive approach performs the best on inference with efficient parallel execution of tree nodes , while the folding technique shows better performance on training thanks to its gpu exploitation .
< extra_id_0 > table 1 : throughput for the treernn model implemented with recursive dataflow graphs , using datasets of varying tree balancedness . the balanced dataset exhibits highest throughput thanks to the high degree of parallelization , but at the same time does not improve as well as the linear dataset when the batch size increases from 1 to 25 .
< extra_id_0 > hyper parameters l2 reg . c > [ bold ] hyper parameters l2 reg . c > [ bold ] hyper parameters l2 reg . c > [ bold ] hyper parameters l2 reg . c > [ bold ] hyper parameters learning rate c > [ bold ] hyper parameters learning rate c > [ bold ] hyper parameters learning rate c > [ bold ] c > [ bold ] c > [ bold ] c >
< extra_id_0 > [ bold ] best f1 ( in 5 - fold ) without sdp c > [ bold ] best f1 ( in 5 - fold ) without sdp c > [ bold ] best f1 ( in 5 - fold ) without sdp c > [ bold ] best f1 ( in 5 - fold ) without sdp c > [ bold ] best f1 ( in 5 - fold ) without sdp c > [ bold ] c > [ bold ] c > [ bold c > [ bold c > [ bold c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold c > [ bold c > [ bold ] with sdp c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > [ bold ] with sdp c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > r - f1 50 % and r - f1 50 % , respectively . y - 3 : y and y - 3 : y perform better than y - 3 : y and y - 3 : y , respectively . y - 3 : y performs better than y - 3 : y and y - 3 : y , respectively . y - 3 : y performs better than y - 3 : y and y - 3 : y , respectively . y - 3 : y performs better than y - 3 : y and y - 3 : y , respectively .
< extra_id_0 > , and paragraph level f1 and r - f1 , respectively . paragraph level f1 and r - f1 differ significantly from the previous two models . the results show that mst - parser performs better than mst - parser and mst - parser performs better than mst - parser and mst - parser . mst - parser performs better than mst - parser and mst - parser performs better than mst - parser .
< extra_id_0 > the mean c - f1 performance is lower than the majority performance over the two indicated systems ; essay vs . paragraph level . note that the mean performance is lower than the majority performance over the runs given in table 2 .
< extra_id_0 > bleu c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu c > [ bleu ser ] c > [ bleu ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser
< extra_id_0 > table 1 : data statistics comparison for the original e2e data and our cleaned version ( number of distinct mrs , total number of textual references , ser as measured by our slot matching script , see section 3 ) . the original e2e data is compared with the cleaned version .
< extra_id_0 > bleu c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu ] c > [ bleu c > [ bleu ] ser c > [ bleu ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser ser
< extra_id_0 > table 4 shows the results of manual error analysis of tgen on a sample of 100 instances from the original test set : total absolute numbers of errors we found ( added , missed , slight disfluencies , slight disfluencies ) .
< extra_id_0 > graphlstm ( damonte and cohen , 2019 ) and snrg ( song et al . , 2017 ) have the best bold performance . snrg ( song et al . , 2017 ) has the best bold performance . graphlstm ( damonte and cohen , 2019 ) has the best bold performance . graphlstm ( damonte and cohen , 2019 ) has the best bold performance . graphlstm has the best all performance .
< extra_id_0 > gcnseq achieves 24 . 5 bleu points on amr17 . gcnseq achieves 24 . 5 bleu points on amr17 . gcnseq achieves 24 . 5 bleu points on amr17 . gcnseq achieves 24 . 5 bleu points on amr17 . gcnseq achieves 24 . 5 bleu points on amr17 . gcnseq achieves 24 . 5 bleu points on amr17 . gcnseq achieves 24 . 5 bleu points on amr17 .
< extra_id_0 > german # p c > [ bold ] english - czech # p c > [ bold ] english - czech # p c > [ bold ] english - czech # p c > [ bold ] english - german # p c > [ bold ] english - czech # p c > [ bold ] english - czech # p c > [ bold ] english - czech # p c > [ beck et al . , 2017 c > [ beck et al . , 2017 c > [ beck et al . , 2017 c > [ beck et al . , 2017 c > [ beck et al . , 2017 c > [ beck et al . , 2018 c > [ beck et al . , 2018 c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > [ beck et al . , 2018 ] c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > 3 c > 2 c > 1 c > 1 c > 2 c > 3 c > 3 c > 3 c > 3 c > 3 c > 3 c > 3 c > 3 c > 3 c > 21 . 9 c > 51 . 9 c > 51 . 9 c > 51 . 9 c > 51 . 9 c > 51 . 9 c > 51 . 9 c >
< extra_id_0 > + rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes rc denotes gcn .
< extra_id_0 > compared to dcgcn ( 2 ) and dcgcn ( 4 ) , respectively , with a d c > 420 and a dcgcn ( 4 ) c > 11 . 3m and a dcgcn ( 4 ) c > 11 . 4m and a dcgcn ( 4 ) c > 12 . 9m and a dcgcn ( 4 ) c > 12 . 9m and a dcgcn ( 4 ) c > 12 . 9m and a dcgcn ( 4 ) c > 22 . 8m and 53 . 4m and 52 . 8m .
< extra_id_0 > table 8 : ablation study for density of connections on the dev set of amr15 . - i dense block denotes removing the dense connections in the i - th block . - i dense block denotes removing the dense connections in the i - th block .
< extra_id_0 > 9 : ablation study for modules used in the graph encoder and the lstm decoder . - graph attention c > 22 . 9 c > 52 . 4 c > 52 . 4 c > - linear combination c > 22 . 9 c > 52 . 4 c > - coverage mechanism c > 52 . 4 c > 52 . 4 c > - direction aggregation c > 52 . 4 c > - c >
< extra_id_0 > table 7 : scores for initialization strategies on probing tasks . glorot c > 35 . 1 c > 70 . 8 c > 78 . 7 c > 78 . 7 c > 78 . 7 c > 78 . 7 c > 79 . 7 c > 79 . 7 c > 79 . 7 c > 79 . 7 c > 79 . 7 c > 79 . 7 c >
< extra_id_0 > subjnum c > tense c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > topconst c > wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc wc
< extra_id_0 > mrpc and mpqa mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc c > 79 . 2 c > 79 . 6 c > 79 . 6 c > 79 . 6 c > 79 . 6 c > mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc mrpc
< extra_id_0 > the results are summarized in table 3 . the hybrid model achieves the highest score on unsupervised downstream tasks . the hybrid model achieves the highest score on unsupervised downstream tasks . the hybrid model achieves the highest score on unsupervised downstream tasks .
< extra_id_0 > our paper has a score of 69 . 6 compared to the baseline of 69 . 6 compared to the baseline of 69 . 6 compared to the baseline of 69 . 6 compared to the baseline of 69 . 6 compared to the baseline of 69 . 6 compared to the baseline of 69 . 6 compared to the baseline of 69 . 8 compared to the baseline of 69 . 8 compared to the baseline of 69 . 8 compared to the baseline of 69 . 8 compared to the baseline score of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 69 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 compared to the baseline of 76 . 9 for glorot .
< extra_id_0 > cmow - c performs better on the unsupervised downstream tasks than on the supervised tasks . cmow - c performs better on the unsupervised tasks than on the supervised tasks .
< extra_id_0 > method c > bshift c > objnum c > topconst c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > cmow - c c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > cmow - c c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > wc c > cmow - c c > cmow - c c > wc c > wc c > wc c >
< extra_id_0 > mrpc c > mrpc c > mrpc c > mrpc c > mrpc c > mrpc c > mrpc c > mrpc c > mrpc c > mrpc c > cmow - c c > 79 . 9 c > 79 . 4 c > 79 . 4 c > 79 . 4 c > cmow - r c >
< extra_id_0 > all loc c > all misc c > all org c > all misc c > all org c > all misc c > all loc c > mil - nd c > 57 . 15 c > 89 . 47 c > 89 . 47 c > 89 . 47 c > 89 . 47 c > 89 . 47 c > 89 . 47 c >
< extra_id_0 > system c > all p c > all r c > in [ italic ] e + p c > all f1 c > 69 . 38 c > 69 . 38 c > 69 . 38 c > 69 . 38 c > 69 . 38 c > 69 . 38 c > 69 . 38 c > 69 . 38 c > 69 . 38 c > 69 . 38 c >
< extra_id_0 > ref gen gen gen gen gen ref gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gen gin gin gin gin gin gin gin gin gin gin gin ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent ent
< extra_id_0 > bold > bleu / bold > bold > meteor / bold > bold > bleu / bold > bold > g2s - gin c > 22 . 55 0 . 17 0 . 16 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14 0 . 14
< extra_id_0 > 3 : results on ldc2015e86 test set when models are trained with additional gigaword data . c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > 4 shows the results of the ablation study on the ldc2017t10 development set . bold > get / italic > + bilstm c > 26 . 33 c > 32 . 42 c > 59 . 6m c > 57 . 6m c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > < extra_id_1 > > 0 - 7
< extra_id_0 > table 8 shows the fraction of elements in the output that are not present in the input ( added ) and the fraction of elements in the input graph that are missing in the generated sentence ( miss ) , for the test set of ldc2017t10 . the token lemmas are used in the comparison .
< extra_id_0 > table 4 : sem and pos tagging accuracy using features extracted from the 4th nmt encoding layer , trained with different target languages on a smaller parallel corpus ( 200k sentences ) . the sem and pos tagging accuracy is shown in table 4 .
< extra_id_0 > 2 : pos and sem tagging accuracy with baselines and an upper bound . pos and sem tagging accuracy with baselines and an upper bound are shown in table 2 .
< extra_id_0 > fr c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > zh c > 89 . 4 c > 89 . 4 c >
< extra_id_0 > table 5 shows pos and sem tagging accuracy with features from different layers of 4 - layer uni / bidirectional / residual nmt encoders , averaged over all non - english target languages . pos and sem tagging accuracy with features from different layers of 4 - layer uni / bidirectional / residual encoders are shown in table 5 .
< extra_id_0 > is the difference between the attacker ’ s performance and the corresponding adversary ’ s accuracy . is the difference between the attacker ’ s score and the corresponding adversary ’ s accuracy . is the difference between the attacker ’ s performance and the corresponding adversary ’ s accuracy .
< extra_id_0 > table 1 : accuracies when training directly towards a single task . c > [ empty ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c > [ italic ] c >
< extra_id_0 > 2 : protected attribute leakage : balanced & unbalanced data splits . pan16 shows a significant difference between the two datasets ( table 2 ) and the unbalanced data splits .
< extra_id_0 > table 3 summarizes the performance on different datasets with an adversarial training . is the difference between the attacker score and the adversary ’ s accuracy . is the difference between the attacker score and the corresponding adversary ’ s accuracy .
< extra_id_0 > 6 : accuracies of the protected attribute with different encoders . leaky achieves 64 . 5 c > 67 . 8 c > 67 . 8 c > 67 . 8 c > 67 . 8 c > 67 . 8 c > 59 . 3 c > 54 . 8 c > 59 . 3 c > 59 . 3 c > 67 . 8 c > c > 67 . 8 c >
< extra_id_0 > ptb + finetune c > wt2 base c > wt2 + dynamic c > yang et al . ( 2018 ) compared the results of yang et al . ( 2018 ) and yang et al . ( 2018 ) compared the results of yang et al . ( 2018 ) and yang et al . ( 2018 ) compared the results of yang et al . ( 2018 ) and yang et al . ( 2018 ) compared to yang et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) and yang et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) et al . ( 2018 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) ( 2017 ) .
< extra_id_0 > base acc c > + bert time c > + ln acc c > + bert time c > + ln + bert time c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > amapolar time c > yahoo err c > yelppolar time c > yelppolar time c > yelppolar time c > yelppolar time c > yelppolar time c > yelppolar time c > yelppolar err c > yelppolar time c > c > c > c > c >
< extra_id_0 > table 3 shows the tokenized bleu score on wmt14 english - german translation task . bleu scores on gnmt and olrn are shown in table 3 . bleu scores on newstest2014 dataset are shown in table 3 .
< extra_id_0 > “ # params ” : the parameter number of elmo . rnet * : the results published by wang et al . ( 2017 ) . rnet * : the results published by wang et al . ( 2018 ) .
< extra_id_0 > “ # params ” : the parameter number in conll - 2003 english ner task . “ # params ” : the parameter number in ner task . “ # params ” : the parameter number in ner task .
< extra_id_0 > table 7 : test accuracy on snli task with base + ln setting and test perplexity on ptb task with base + ln setting and test perplexity on snli task with base + ln setting and test perplexity on snli task with base + ln setting .
< extra_id_0 > b - 2 and r - 2 , respectively . w / system retrieval [ bold ] r - 2 and b - 4 , respectively . w / system retrieval [ bold ] r - 2 and b - 4 , respectively . c > [ italic ] w / system retrieval [ bold ] # sent c > [ italic ] w / system retrieval [ bold ] # word c > [ italic ] w / system retrieval [ bold ] r - 2 , respectively .
< extra_id_0 > the highest standard deviation among automatic systems is 1 . 0 . the highest standard deviation among automatic systems is highlighted in bold . the highest standard deviation among all automatic systems is 1 . 0 . the highest standard deviation among all automatic systems is highlighted in bold . the highest standard deviation among all automatic systems is 1 . 0 . the highest standard deviation among all automatic systems is highlighted in bold . the highest standard deviation among all automatic systems is 1 . 0 .
< extra_id_0 > dlqs and docsub are the best performing dlqs and docsub , respectively . the results show that the dlqs and docsub perform better than the lang cluster and patt cluster , respectively . the dlqs and docsub perform better than the lang cluster and patt cluster , respectively .
< extra_id_0 > dsim , docsub and docsub perform better than lang c > dsim and patt c > docsub and hclust perform better than lang c > dsim and patt c > docsub and hclust perform better than lang c > dsim and patt c > dsim performs better than lang c > dsim and docsub perform better than lang c > dsim and hclust perform better than lang c > dsim performs better than lang clust , respectively .
< extra_id_0 > dlqs and docsub , respectively , and hclust , respectively . in terms of p c > p c > p c > p c > p c > p c > p c > p c > p c > p c > p c > p c > p c > p c > p c > c > c > c > c > pt c
< extra_id_0 > dsim and docsub perform better than df and hlqs , respectively . hlqs and docsub perform better than df and hlqs , respectively . hlqs and docsub perform better than df and hlqs , respectively . hlqs performs better than hlqs and hlqs , respectively .
< extra_id_0 > avgdepth is 9 . 9 , while the maxdepth is 9 . 9 , and the avgdepth is 9 . 9 , respectively . europarl c > 980 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 c > 1 , 000 cluster cluster
< extra_id_0 > r0 , r1 , r2 and r3 denote question type , answer score sampling , and hidden dictionary learning , respectively . lf is the enhanced version as we mentioned in table 1 . ndcg % comparison for the experiments of applying our principles on the validation set of visdial v1 . 0 . ndcg % comparison for the experiments of applying our principles in table 1 .
< extra_id_0 > table 2 : performance ( ndcg % ) of ablative studies on different models on visdial v1 . 0 validation set . p2 indicates the most effective one ( i . e . , hidden dictionary learning ) shown in table 1 .
< extra_id_0 > table 5 : comparison on hard and soft alignments . wmd - f1 and hmd - recall perform better than cs - en , fi - en and lv - en .
< extra_id_0 > de - en c > zh - en c > zh - en c > zh - en c > zh - en c > zh - en c > zh - en c > zh - en c > zh - en c > zh - en c > zh - en c > zh - en c > c > c >
< extra_id_0 > - bold > qual / bold > sfhotel bold > qual / bold > bold > qual / bold > bold > qual / bold > bold > qual / bold > bold > qual / bold > bold > qual / bold > bold > qual / bold > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > m1 m2 m1 m2 m2 m1 m2 m2 m1 m2 m2 m1 m2 m2 m1 m2 m2 m1 m2 m2 m1 m2 m1 m2 m2 m1 m2 m2 r1 r1 r1 r1 r1 r1 r1
< extra_id_0 > m0 has a better performance than m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - 1 has a better performance ) compared to m0 ( shen - para ( shen - para ( shen - para ) ) .
< extra_id_0 > transfer quality a > b c > models b c > models a c > models b c > models a c > models b c > models b c > models a c > models b c > models b c > models b c > models a c > models b c > models b c > models b c > models b c > transfer quality tie c > models b c > models b c > models b c > models b c > models b c > models b c > semantic preservation tie sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim sim
< extra_id_0 > table 5 shows the human validation of acc and pp ; 150 examples for sim and pp ; 150 for spearman ’ s [ italic ] and 150 for pp ; see text for validation of gm ; see text for validation of acc ; see text for validation of gm ; see text for validation of acc ; see text for validation of gm ; see text for validation of acc ; see text for validation of acc ; see text for validation of pp ; see text for validation of acc ; see table 5 .
< extra_id_0 > gm has a better performance than m0 and m5 : m0 , respectively . m0 has a better performance than m0 and m5 : m0 , respectively . m5 and m5 have a better performance than m0 and m5 : m0 , respectively . m5 and m5 have a better performance than m0 , respectively .
< extra_id_0 > bleu is between 1000 transferred sentences and human references , and acc is restricted to the same 1000 sentences . our best models achieve higher bleu than previous work at similar levels of acc , but untransferred sentences achieve the highest bleu than prior work at similar levels of bleu . the results on yelp sentiment transfer are shown in table 6 . our best models achieve higher bleu than previous work , but untransferred sentences achieve the highest bleu than previous work at similar levels of acc . bleu .
< extra_id_0 > table 2 summarizes the percentage of reparandum tokens that were correctly predicted as disfluent . rephrased tokens have a significantly higher average reparandum length than rephrased tokens . rephrased tokens have a significantly higher average reparandum length than rephrased tokens . rephrased tokens have a significantly higher average reparandum length than rephrased tokens . rephrased tokens have a significantly higher average reparandum length than rephrased tokens
< extra_id_0 > table 3 shows the relative frequency of rephrases correctly predicted as disfluent for disfluencies that contain a content word in both the reparandum and repair ( content - content ) , either the reparandum or repair ( content - function ) , or in neither of the two categories .
< extra_id_0 > c > [ bold ] dev mean c > [ bold ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > [ italic ] test mean c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > accuracy ( % ) agree c > accuracy ( % ) disagree c > accuracy ( % ) disagree c > accuracy ( % ) unrelated c > average of word2vec embedding c > 12 . 43 c > 01 . 30 c > 01 . 30 c > 79 . 53 c > 81 . 72 c > [ bold ] c > [ bold ] c > [ bold ] c >
< extra_id_0 > table 2 shows the accuracy ( % ) of different methods on the apw and nyt datasets for the document dating problem ( higher is better ) . the unified model significantly outperforms all previous models .
< extra_id_0 > table 3 . the results show the effectiveness of both word attention and graph attention for this task . the results show the effectiveness of both word attention and graph attention for this task .
< extra_id_0 > 1 / n c > [ bold ] 1 / n c > [ bold ] 1 / n c > [ bold ] all c > [ bold ] embedding + t c > 69 . 8 c > 69 . 8 c > 69 . 8 c > 69 . 8 c > 69 . 8 c > embedding + t c > 69 . 8 c > 69 . 8 cnn cnn cnn cnn cnn cnn
< extra_id_0 > trigger [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] classification ( % ) c > [ bold ] identification ( % ) c > [ bold ] classification ( % ) c > [ bold ] identification ( % ) c > [ bold ] classification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] identification ( % ) c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold ] c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold c > [ bold ] c > [ bold c > [ bold c > [ bold ] c > [ bold
< extra_id_0 > wer
< extra_id_0 > table 4 shows the results on the dev set and on the test set using discriminative training with only subsets of the code - switched data . the results on the dev set and on the test set using discriminative training are summarized in table 4 .
< extra_id_0 > table 5 : accuracy on the dev set and on the test set , according to the type of the gold sentence in the set : code - switched ( cs ) vs . monolingual ( mono ) . cs - only - disc vs . fine - tuned - disc has a higher accuracy than fine - tuned - disc .
< extra_id_0 > table 7 shows the precision ( p ) , recall ( r ) and f1 - score ( f ) for using type - aggregated gaze features trained on all three eye - tracking datasets and tested on the conll - 2003 dataset ( * marks statistically significant improvement ) . type - aggregated gaze features trained on all three eye - tracking datasets and tested on the conll - 2003 dataset are shown in table 7 .
< extra_id_0 > table 5 shows the p , recall ( r ) and f1 - score ( f ) for using type - aggregated gaze features on the conll - 2003 dataset ( * marks statistically significant improvement ) . using type - aggregated gaze features on the conll - 2003 dataset is shown in table 5 .
< extra_id_0 > the hpcd ( full ) is from the original paper , and it uses syntactic skipgram . the results on belinkov2014exploring ’ s ppa test set are summarized in table 1 . lstm - pp and lstm - pp have the best performance .
< extra_id_0 > table 2 summarizes results from rbg dependency parser with features coming from various pp attachment predictors and oracle attachments . rbg + hpcd ( full ) achieves 94 . 17 and 88 . 51 respectively .
< extra_id_0 > table 3 shows the effect of removing sense priors and context sensitivity ( attention ) from the model . the effect of removing sense priors and context sensitivity ( attention ) from the model is shown in table 3 .
< extra_id_0 > adding subtitle data and domain tuning for image caption translation ( bleu % scores ) . all results with marian amun are shown in table 2 .
< extra_id_0 > and mscoco17 , respectively . subs1m [ italic ] [ italic ] lm + ms - coco outperforms subs1m [ lm + ms - coco ] and lm + ms - coco , respectively . lm + ms - coco outperforms subs1m [ lm + ms - coco ] and lm + ms - coco , respectively . lm + ms - coco outperforms subs1m [ empty ] and mscoco17 , respectively .
< extra_id_0 > autocap 1 - 5 ( concat ) and autocap 1 - 5 ( concat ) significantly outperforms en - de and flickr16 and mscoco17 in terms of automatic image captioning . adding autocap 1 - 5 ( concat ) and autocap 1 - 5 ( concat ) significantly outperforms en - de , flickr16 and mscoco17 in terms of automatic image captioning .
< extra_id_0 > mscoco17 and en - de c > flickr16 c > flickr17 c > en - de c > flickr16 c > mscoco17 c > mscoco17 c > enc - gate c > 68 . 30 c > dec - gate c > 36 . 47 c > enc - gate c > 67 . 99 c > 67 . 47 c > enc - gate
< extra_id_0 > mscoco17 and subs3m en - fr c > en - fr c > mscoco17 c > en - fr c > en - fr c > en - fr c > en - fr c > en - fr c > en - fr c > en - fr c > en - fr c > mscoco17 c > c > subs3m c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c > c >
< extra_id_0 > on the other hand , en - fr - trans - ff performs better than en - fr - trans - ff and en - fr - smt - back , respectively . moreover , en - fr - trans - ff performs better than en - fr - trans - ff and en - fr - trans - ff , respectively . the results show that en - fr - trans - ff performs better than en - fr - trans - back performs better than en - fr
< extra_id_0 > table 1 shows the number of parallel sentences in the train , test and development splits for the language pairs we used . the number of parallel sentences in the train , test and development splits for the language pairs we used is shown in table 1 .
< extra_id_0 > table 2 : training vocabularies for the english , french and spanish data used for our models . the training vocabularies for the english , french and spanish data used for our models are shown in table 2 .
< extra_id_0 > table 5 summarizes the automatic evaluation scores ( bleu and ter ) for the rev systems . the bleu and ter scores are shown in table 5 .
< extra_id_0 > vgs is the visually supervised model from chrupala2017representations . the row labeled vgs is the visually supervised model from chrupala2017representations . the median recall rate is 0 and the median rank is 0 . 0 .
< extra_id_0 > table 1 : results on synthetically spoken coco . the row labeled vgs is the visually supervised model from chrupala2017representations . the row labeled vgs is the visually supervised model from chrupala2017representations .
< extra_id_0 > she turns in a u > screenplay screenplay screenplay screenplay screenplay screenplay screenplay screenplay screenplay that ’ s so clever you want hate hate hate hate hate hate hate . we report further examples in table 1 .
< extra_id_0 > bold > rnn / bold > 3 bold > dan / bold > 3 bold > dan / bold > 3 bold > dan / bold > 3 bold > dan / bold > 1 c > 3 c > 4 c > 3 c > 4 c > 4 3 4
< extra_id_0 > the numbers indicate the changes in percentage points with respect to the original sentence . the last two rows correspond to the case where negative labels are flipped to positive and vice versa . and indicate that the score increases in positive and negative sentiment .
< extra_id_0 > it n ’ t evaluative c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > it c > < extra_id_1 >
